commands:
  01_create_post_dir:
    command: "mkdir /opt/elasticbeanstalk/hooks/appdeploy/post"
    ignoreErrors: true

files:
  "/etc/httpd/conf.d/vhost.conf" :
    mode: "000755"
    owner: root
    group: root
    content: |
      <VirtualHost *:80>
        ServerName default:80
        DocumentRoot /var/www/html
      </VirtualHost>

      <VirtualHost *:80>
        DocumentRoot "/var/www/html"
        ServerName blocks.local
        ErrorLog "/var/log/httpd/blocks.local_error"
        CustomLog "/var/log/httpd/blocks.local_access" common
        <Directory "/var/www/html">
          AllowOverride All
          Require all granted
        </Directory>
      </VirtualHost>

  "/etc/logrotate.d/httpd" :
    mode: "000755"
    owner: root
    group: root
    content: |
      /var/log/httpd/*log {
        size 500k
        missingok
        notifempty
        sharedscripts
        delaycompress
        postrotate
          /etc/init.d/httpd reload > /dev/null 2>/dev/null || true
        endscript
      }

  "/tmp/setup.sh" :
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/sh
      
      if [ ! -d /usr/local/bin/ffmpeg ]; then
        # Install ffmpeg
        cd /usr/local/bin
        wget https://johnvansickle.com/ffmpeg/builds/ffmpeg-git-64bit-static.tar.xz
        mkdir ffmpeg
        tar -xf ffmpeg-git-64bit-static.tar.xz -C ffmpeg --strip-components=1
        ln -s /usr/local/bin/ffmpeg/ffmpeg /usr/bin/ffmpeg
        ln -s /usr/local/bin/ffmpeg/ffprobe /usr/bin/ffprobe
      fi
      if [ ! -d /usr/local/bin/phantomjs ]; then
        # Install phantomj
        cd /usr/local/bin
        wget https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2
        mkdir phantomjs
        tar -xf phantomjs-2.1.1-linux-x86_64.tar.bz2 -C phantomjs --strip-components=1
        ln -s /usr/local/bin/phantomjs/bin/phantomjs /usr/bin/phantomjs
        
        # add to hosts file
        echo "127.0.0.1   blocks.local" >> /etc/hosts
      fi

  "/tmp/fonts.sh" :
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/sh
      mkdir /usr/share/fonts 2>/dev/null
      mkdir /usr/share/fonts/noto 2>/dev/null
      # Install NotoSans
      cd /var/app/current/_fonts/NotoSans
      cp *.ttf /usr/share/fonts/noto 
      # loop through subdirs, cope all fonts
      for i in *
        do                 
          if [ -d $i ]  
            then
              cd $i;
              cp *.ttf /usr/share/fonts/noto 2>/dev/null
              cp *.ttc /usr/share/fonts/noto 2>/dev/null
              cd ../
          fi
        done

  "/opt/elasticbeanstalk/addons/logpublish/hooks/config/start_video_bot.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/sh
      # kill old bot
      ps -ef | grep '/var/app/current/VideoBot/daemon/run.php' | awk '{print $2}' | grep -v 'grep' | xargs kill >/dev/null 2>/dev/null
      # start new bot
      mkdir /var/app/current/log
      touch /var/app/current/log/video-bot.log
      touch /var/app/current/log/video-bot-error.log
      php /var/app/current/VideoBot/daemon/run.php >/var/app/current/log/video-bot.log 2>/var/app/current/log/video-bot-error.log  &

commands:

  02_run_setup:
    command: "/tmp/setup.sh" 

container_commands:
    copy_fonts:
        command: "/tmp/fonts.sh"
